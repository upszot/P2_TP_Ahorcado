/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ahorcado;

import java.awt.image.BufferedImage;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.Window;
import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

/**
 *
 * @author upszot
 */
public class MDI_Principal extends javax.swing.JFrame
{

    //<editor-fold desc="Atributos">
    // </editor-fold>
    /**
     * Creates new form NewMDIApplication
     */
    public MDI_Principal()
    {
        this.setTitle("upszot  Game");
        initComponents();
        miCustomCursor();
        this.desktopPane.setBorder(new fondoP());
        
        //this.paintComponents(grphcs);
        //Alto: 857 ancho: 829
        System.out.println(" medidas" + this.getWidth() + this.getHeight());
        this.setResizable(false);

    }

    
    public void miCustomCursor() 
    {        
        String imgCursor1="imagenes/cursor1.cur"; //este no lo muestra
        String imgCursor2="imagenes/cursor2.png";
        String imgCursor3="imagenes/cursor3.png"; //el que mejor se ve...
        ImageIcon imagen=new ImageIcon(imgCursor3);
        
        Cursor miCursor;
        Toolkit TK =  Toolkit.getDefaultToolkit();
        
        miCursor = TK.createCustomCursor(imagen.getImage(), new Point(0,0),"Cursor");
        this.desktopPane.setCursor(miCursor);        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        nuevoMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        scoreMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 700));
        setMinimumSize(new java.awt.Dimension(800, 700));

        desktopPane.setMaximumSize(new java.awt.Dimension(800, 600));
        desktopPane.setMinimumSize(new java.awt.Dimension(800, 700));
        desktopPane.setRequestFocusEnabled(false);

        fileMenu.setMnemonic('f');
        fileMenu.setText("Juego");

        nuevoMenuItem.setMnemonic('o');
        nuevoMenuItem.setText("Nuevo");
        nuevoMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                nuevoMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(nuevoMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        scoreMenuItem.setMnemonic('c');
        scoreMenuItem.setText("Score");
        scoreMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                scoreMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(scoreMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void nuevoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoMenuItemActionPerformed
        // TODO add your handling code here:
        //abrir ventana para nuevo juego
        Frm_juego vjuego = new Frm_juego();
        this.getDesktopPane().add(vjuego);
        
        Dimension desktopSize = this.desktopPane.getSize();
        Dimension FrameSize = vjuego.getSize();
        vjuego.setLocation((desktopSize.width - FrameSize.width)/2, (desktopSize.height- FrameSize.height)/2);
        
        
        vjuego.show();
        vjuego.addComponentListener(new ComponentListener()
        {
            @Override
            public void componentResized(ComponentEvent e)
            {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void componentMoved(ComponentEvent e)
            {
                // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void componentShown(ComponentEvent e)
            {
                // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void componentHidden(ComponentEvent e)
            {
                Frm_score vScore = new Frm_score();
                desktopPane.add(vScore);
                vScore.show();
                // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });

    }//GEN-LAST:event_nuevoMenuItemActionPerformed
//------------------

    //-------------------
    private void scoreMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_scoreMenuItemActionPerformed
    {//GEN-HEADEREND:event_scoreMenuItemActionPerformed
        // TODO add your handling code here:
        Frm_score vScore = new Frm_score();
        this.getDesktopPane().add(vScore);
        
        Dimension desktopSize = this.desktopPane.getSize();
        Dimension FrameSize = vScore.getSize();
        vScore.setLocation((desktopSize.width - FrameSize.width)/2, (desktopSize.height- FrameSize.height)/2);
        vScore.show();
        
    }//GEN-LAST:event_scoreMenuItemActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_aboutMenuItemActionPerformed
    {//GEN-HEADEREND:event_aboutMenuItemActionPerformed
        // TODO add your handling code here:

        System.out.println("Alto: " + this.getHeight() + " ancho: " + this.getWidth());

    }//GEN-LAST:event_aboutMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(MDI_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(MDI_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(MDI_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(MDI_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new MDI_Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem nuevoMenuItem;
    private javax.swing.JMenuItem scoreMenuItem;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the desktopPane
     */
    public javax.swing.JDesktopPane getDesktopPane()
    {
        return desktopPane;
    }

    /**
     * @param desktopPane the desktopPane to set
     */
    public void setDesktopPane(javax.swing.JDesktopPane desktopPane)
    {
        this.desktopPane = desktopPane;
    }
}
